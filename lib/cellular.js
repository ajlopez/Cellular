var cellular = (function() {    function Cell() {        this.value = 0;        this.neighbours = [];    }        function LinearAutomata(size, states, width) {        var cells = new Array(size);                for (var k = 0; k < size; k++)            cells[k] = new Cell();                    for (var k = 0; k < size; k++) {            var cell = cells[k];            for (var w = -width; w <= width; w++)                cell.neighbours[width+w] = cells[k+w] || null;        }        this.getSize = function() { return size; };        this.getStates = function() { return states; };        this.getWidth = function() { return width; };        this.getCell = function(x) { return cells[x]; };        this.setCellValue = function(x, value) { cells[x].value = value; }    }        function createLinearAutomata(size, states, width, rule) {        return new LinearAutomata(size, states, width);    }        return {        createLinearAutomata: createLinearAutomata    }}());if (typeof(window) === 'undefined') {    module.exports = cellular;}